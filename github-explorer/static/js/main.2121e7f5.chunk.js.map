{"version":3,"sources":["assets/logo.svg","assets/github-background.svg","components/Header/styles.ts","components/Header/index.tsx","styles/themes/dark.ts","styles/themes/light.ts","services/api.ts","animations/index.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","styles/global.ts","utils/usePersistedState.ts","App.tsx","index.tsx"],"names":["module","exports","Container","styled","div","Header","toggleTheme","useContext","ThemeContext","colors","title","to","src","logoImg","alt","onChange","checked","checkedIcon","uncheckedIcon","height","width","handleDiameter","offColor","shade","primary","onColor","secondary","background","icon","subtitle","description","cardTitle","cardBackground","api","axios","create","baseURL","titleAnimation","hidden","opacity","y","transition","duration","ease","show","out","formAnimation","scale","delay","listAnimation","when","staggerChildren","listItemAnimation","imageAnimation","infoAnimation","x","Title","motion","h1","props","theme","Form","form","hasError","css","Error","span","Repositories","Dashboard","useState","newRepo","setNewRepo","inputError","setInputError","storedRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","useEffect","setItem","stringify","handleAddRepository","useCallback","event","a","preventDefault","find","repository","full_name","toLowerCase","get","data","variants","initial","animate","exit","onSubmit","value","autoCorrect","autoCapitalize","e","target","placeholder","type","map","key","owner","avatar_url","login","size","header","RepositoryInfo","section","Issues","Repository","setRepository","issues","setIssues","params","useRouteMatch","then","response","img","ul","li","stargazers_count","forks_count","open_issues_count","issue","id","href","html_url","rel","user","Routes","location","useLocation","exitBeforeEnter","pathname","path","exact","component","createGlobalStyle","githubBackground","usePersistedState","initialState","storageValue","state","setState","App","usePeristedState","light","setTheme","dark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2121e7f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-background.0b819d63.svg\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 60px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import React, { useContext } from 'react';\nimport Switch from 'react-switch';\nimport { Link } from 'react-router-dom';\nimport { ThemeContext } from 'styled-components';\nimport { shade } from 'polished';\n\nimport { Container } from './styles';\nimport logoImg from '../../assets/logo.svg';\n\ninterface HeaderProps {\n  toggleTheme(): void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ toggleTheme }: HeaderProps) => {\n  const { colors, title } = useContext(ThemeContext);\n\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logoImg} alt=\"Github Explorer\" />\n      </Link>\n\n      <Switch\n        onChange={toggleTheme}\n        checked={title === 'dark'}\n        checkedIcon={false}\n        uncheckedIcon={false}\n        height={20}\n        width={40}\n        handleDiameter={20}\n        offColor={shade(0.15, colors.primary)}\n        onColor={colors.secondary}\n      />\n    </Container>\n  );\n};\n\nexport default Header;\n","export default {\n  title: 'dark',\n\n  colors: {\n    primary: '#333',\n    secondary: '#718AF4',\n\n    background: '#5C5D6D',\n\n    icon: '#cbcbd6',\n    title: '#faf7ff',\n    subtitle: '#f0f0f2',\n    description: '#a8a8b3',\n\n    cardTitle: '#f0f0f5',\n    cardBackground: '#525362',\n  },\n};\n","export default {\n  title: 'light',\n\n  colors: {\n    primary: '#718AF4',\n    secondary: '#718AF4',\n\n    background: '#f0f0f5',\n\n    icon: '#cbcbd6',\n    title: '#3a3a3a',\n    subtitle: '#6c6c80',\n    description: '#a8a8b3',\n\n    cardTitle: '#3d3d4d',\n    cardBackground: '#ffffff',\n  },\n};\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","export const titleAnimation = {\n  hidden: {\n    opacity: 0,\n    y: -32,\n    transition: { duration: 0.2, ease: 'easeIn' },\n  },\n  show: {\n    opacity: 1,\n    y: 0,\n    transition: { duration: 0.2, ease: 'easeOut' },\n  },\n  out: {\n    opacity: 0,\n    y: -24,\n    transition: { duration: 0.2, ease: 'easeIn' },\n  },\n};\n\nexport const formAnimation = {\n  hidden: {\n    opacity: 0,\n    y: -8,\n    scale: 0.85,\n    transition: { duration: 0.2, ease: 'easeIn' },\n  },\n  show: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    transition: { delay: 0.2, duration: 0.2, ease: 'easeOut' },\n  },\n  out: {\n    opacity: 0,\n    y: -16,\n    scale: 0.85,\n    transition: { duration: 0.2, ease: 'easeIn' },\n  },\n};\n\nexport const listAnimation = {\n  hidden: {\n    opacity: 0,\n    transition: {\n      when: 'afterChildren',\n    },\n  },\n  show: {\n    opacity: 1,\n    transition: {\n      when: 'beforeChildren',\n      staggerChildren: 0.1,\n    },\n  },\n  out: {\n    opacity: 0,\n    transition: {\n      when: 'afterChildren',\n      staggerChildren: 0.1,\n    },\n  },\n};\n\nexport const listItemAnimation = {\n  hidden: { opacity: 0, y: -8 },\n  show: { opacity: 1, y: 0 },\n  out: { opacity: 0, y: -24 },\n};\n\n// repository page\nexport const imageAnimation = {\n  hidden: {\n    width: 60,\n    height: 60,\n    transition: {\n      ease: 'easeIn',\n    },\n  },\n  show: {\n    width: 120,\n    height: 120,\n    transition: {\n      ease: 'easeOut',\n    },\n  },\n  out: {\n    width: 60,\n    height: 60,\n    opacity: 0,\n    transition: {\n      ease: 'easeInOut',\n    },\n  },\n};\n\nexport const infoAnimation = {\n  hidden: {\n    opacity: 0,\n    y: -20,\n    x: -12,\n    transition: {\n      ease: 'easeIn',\n    },\n  },\n  show: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    transition: {\n      delay: 0.2,\n      ease: 'easeOut',\n    },\n  },\n  out: {\n    opacity: 0,\n    y: -24,\n    x: -12,\n    transition: {\n      ease: 'easeInOut',\n    },\n  },\n};\n","import styled, { css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled(motion.h1)`\n  font-size: 48px;\n  max-width: 450px;\n  margin-top: 80px;\n  line-height: 56px;\n  color: ${(props) => props.theme.colors.title};\n`;\n\nexport const Form = styled(motion.form)<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    border: 0;\n    height: 70px;\n    color: #3a3a3a;\n    padding: 0 24px;\n    border: 2px solid #fff;\n    border-right: 0;\n    border-radius: 5px 0px 0px 5px;\n\n    ${(props) =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    @media (max-width: 480px) {\n      font-size: 90%;\n    }\n\n    &::placeholder {\n      color: ${(props) => props.theme.colors.description};\n      @media (max-width: 480px) {\n        font-size: 80%;\n      }\n    }\n  }\n\n  button {\n    border: 0;\n    color: #fff;\n    width: 210px;\n    height: 70px;\n    font-weight: bold;\n    background-color: #04d361;\n    border-radius: 0px 5px 5px 0px;\n    transition: background-color 0.2s;\n\n    @media (max-width: 480px) {\n      padding: 5px;\n      font-size: 90%;\n    }\n\n    &:hover {\n      background: ${shade(0.2, '#04d361')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n\nexport const Repositories = styled(motion.div)`\n  margin-top: 80px;\n  max-width: 700px;\n\n  > div {\n    margin-bottom: 8px;\n  }\n\n  a {\n    width: 100%;\n    padding: 24px;\n    display: block;\n    background: ${(props) => props.theme.colors.cardBackground};\n    border-radius: 5px;\n    text-decoration: none;\n    transition: transform 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n\n      @media (max-width: 480px) {\n        width: 48px;\n        height: 48px;\n        align-self: flex-start;\n      }\n    }\n\n    div {\n      flex: 1;\n      margin: 0 16px;\n\n      strong {\n        font-size: 20px;\n        color: ${(props) => props.theme.colors.cardTitle};\n      }\n\n      p {\n        color: ${(props) => props.theme.colors.description};\n        margin-top: 4px;\n        font-size: 18px;\n\n        @media (max-width: 480px) {\n          font-size: 82%;\n        }\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: ${(props) => props.theme.colors.icon};\n\n      @media (max-width: 480px) {\n        width: 20px;\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect, FormEvent, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport {\n  titleAnimation,\n  formAnimation,\n  listAnimation,\n  listItemAnimation,\n} from '../../animations';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storedRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n\n    if (storedRepositories) {\n      return JSON.parse(storedRepositories);\n    }\n\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  const handleAddRepository = useCallback(\n    async (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n\n      if (!newRepo) {\n        setInputError('Digite o autor/nome do repositório');\n        return;\n      }\n\n      // check if repository already exists\n      if (\n        repositories.find(\n          (repository) => repository.full_name === newRepo.toLowerCase(),\n        )\n      ) {\n        setNewRepo('');\n        setInputError('Ops, você já adicionou este repositório');\n        return;\n      }\n\n      try {\n        const { data: repository } = await api.get<Repository>(\n          `repos/${newRepo}`,\n        );\n\n        setRepositories([...repositories, repository]);\n        setNewRepo('');\n        setInputError('');\n      } catch (error) {\n        setNewRepo('');\n        setInputError('Desculpe, não encontramos este repositório');\n      }\n    },\n    [newRepo, repositories],\n  );\n\n  return (\n    <>\n      <Title\n        variants={titleAnimation}\n        initial=\"hidden\"\n        animate=\"show\"\n        exit=\"out\"\n      >\n        Explore repositórios no GitHub\n      </Title>\n\n      <Form\n        hasError={!!inputError}\n        onSubmit={handleAddRepository}\n        variants={formAnimation}\n        initial=\"hidden\"\n        animate=\"show\"\n        exit=\"out\"\n      >\n        <input\n          value={newRepo}\n          autoCorrect=\"false\"\n          autoCapitalize=\"none\"\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder=\"digite o nome do repositório\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories\n        variants={listAnimation}\n        initial=\"hidden\"\n        animate=\"show\"\n        exit=\"out\"\n      >\n        {repositories.map((repository) => (\n          <motion.div variants={listItemAnimation}>\n            <Link\n              key={repository.full_name}\n              to={`/repository/${repository.full_name}`}\n            >\n              <img\n                src={repository.owner.avatar_url}\n                alt={repository.owner.login}\n              />\n              <div>\n                <strong>{repository.owner.login}</strong>\n                <p>{repository.description}</p>\n              </div>\n\n              <FiChevronRight size={40} />\n            </Link>\n          </motion.div>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nexport const Header = styled.header`\n  margin-top: 16px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    color: ${(props) => props.theme.colors.description};\n    align-items: center;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${(props) => props.theme.colors.title};\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const RepositoryInfo = styled.section`\n  header {\n    display: flex;\n    align-items: center;\n\n    margin-top: 80px;\n\n    @media (max-width: 480px) {\n      margin-top: 52px;\n      align-items: flex-start;\n    }\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n\n      @media (max-width: 480px) {\n        width: 20%;\n        height: 50%;\n      }\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        color: ${(props) => props.theme.colors.cardTitle};\n        font-size: 36px;\n\n        @media (max-width: 480px) {\n          font-size: 140%;\n        }\n      }\n\n      p {\n        color: ${(props) => props.theme.colors.description};\n        font-size: 18px;\n        margin-top: 4px;\n\n        @media (max-width: 480px) {\n          font-size: 100%;\n        }\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    margin-top: 40px;\n    list-style: none;\n\n    li {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n\n      @media (max-width: 480px) {\n        margin: 0 auto;\n      }\n\n      & + li {\n        margin-left: 80px;\n\n        @media (max-width: 480px) {\n          margin-left: 40px;\n        }\n      }\n\n      strong {\n        color: ${(props) => props.theme.colors.cardTitle};\n        display: block;\n        font-size: 36px;\n\n        > svg {\n          margin-right: 8px;\n        }\n\n        @media (max-width: 480px) {\n          font-size: 90%;\n\n          display: flex;\n          align-items: flex-start;\n          justify-content: center;\n          flex-direction: column;\n        }\n      }\n\n      span {\n        color: ${(props) => props.theme.colors.subtitle};\n        display: block;\n        margin-top: 4px;\n\n        @media (max-width: 480px) {\n          font-size: 80%;\n        }\n      }\n    }\n  }\n`;\n\nexport const Issues = styled(motion.div)`\n  margin-top: 80px;\n\n  > div {\n    margin-bottom: 8px;\n  }\n\n  a {\n    width: 100%;\n    padding: 24px;\n    display: block;\n    background: ${(props) => props.theme.colors.cardBackground};\n    border-radius: 5px;\n    text-decoration: none;\n    transition: transform 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      min-width: 64px;\n      min-height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      flex: 1;\n      margin: 0 16px;\n\n      strong {\n        font-size: 20px;\n        color: ${(props) => props.theme.colors.cardTitle};\n\n        @media (max-width: 480px) {\n          font-size: 100%;\n          text-align: justify;\n        }\n      }\n\n      p {\n        color: ${(props) => props.theme.colors.description};\n        margin-top: 4px;\n        font-size: 18px;\n\n        @media (max-width: 480px) {\n          font-size: 100%;\n          text-align: justify;\n        }\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: ${(props) => props.theme.colors.icon};\n\n      @media (max-width: 480px) {\n        width: 20px;\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport {\n  FiStar,\n  FiGitBranch,\n  FiAlertCircle,\n  FiChevronLeft,\n  FiChevronRight,\n} from 'react-icons/fi';\nimport { motion } from 'framer-motion';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport {\n  listAnimation,\n  listItemAnimation,\n  imageAnimation,\n  infoAnimation,\n} from '../../animations';\n\nimport api from '../../services/api';\n\nimport { Header, RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  forks_count: number;\n  stargazers_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then((response) => {\n      setRepository(response.data);\n    });\n\n    api.get(`repos/${params.repository}/issues`).then((response) => {\n      setIssues(response.data);\n    });\n  }, [params.repository]);\n\n  return (\n    <>\n      <Header>\n        <Link to=\"/\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <motion.img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n              variants={imageAnimation}\n              initial=\"hidden\"\n              animate=\"show\"\n              exit=\"out\"\n            />\n            <motion.div\n              variants={infoAnimation}\n              initial=\"hidden\"\n              animate=\"show\"\n              exit=\"out\"\n            >\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </motion.div>\n          </header>\n\n          <motion.ul\n            variants={listAnimation}\n            initial=\"hidden\"\n            animate=\"show\"\n            exit=\"out\"\n          >\n            <motion.li variants={listItemAnimation}>\n              <strong>\n                <FiStar size={28} />\n                {repository.stargazers_count}\n              </strong>\n              <span>Stars</span>\n            </motion.li>\n\n            <motion.li variants={listItemAnimation}>\n              <strong>\n                <FiGitBranch size={28} />\n                {repository.forks_count}\n              </strong>\n              <span>Forks</span>\n            </motion.li>\n\n            <motion.li variants={listItemAnimation}>\n              <strong>\n                <FiAlertCircle size={28} />\n                {repository.open_issues_count}\n              </strong>\n              <span>Issues abertas</span>\n            </motion.li>\n          </motion.ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues\n        variants={listAnimation}\n        initial=\"hidden\"\n        animate=\"show\"\n        exit=\"out\"\n      >\n        {issues.map((issue) => (\n          <a\n            key={issue.id}\n            href={issue.html_url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n\n            <FiChevronRight size={40} />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n","import React from 'react';\nimport { AnimatePresence } from 'framer-motion';\nimport { Switch, Route, useLocation } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Repository from '../pages/Repository';\n\nconst Routes: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <AnimatePresence exitBeforeEnter initial={false}>\n      <Switch location={location} key={location.pathname}>\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route path=\"/repository/:repository+\" component={Repository} />\n      </Switch>\n    </AnimatePresence>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nimport githubBackground from '../assets/github-background.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: ${(props) =>\n      props.theme.colors\n        .background}  url(${githubBackground}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font-size: 16px;\n    font-family: Roboto, sans-serif;\n  }\n\n  #root {\n    margin: 0 auto;\n    max-width: 960px;\n    padding: 40px 20px;\n  }\n\n  button, a {\n    cursor: pointer;\n  }\n`;\n","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\ntype Response<T> = [T, Dispatch<SetStateAction<T>>];\n\nfunction usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    }\n    return initialState;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport default usePersistedState;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider, DefaultTheme } from 'styled-components';\n\nimport Header from './components/Header';\n\nimport dark from './styles/themes/dark';\nimport light from './styles/themes/light';\n\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\nimport usePeristedState from './utils/usePersistedState';\n\nconst App: React.FC = () => {\n  const [theme, setTheme] = usePeristedState<DefaultTheme>('theme', light);\n\n  const toggleTheme = (): void => {\n    setTheme(theme.title === 'light' ? dark : light);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter>\n        <Header toggleTheme={toggleTheme} />\n        <Routes />\n        <GlobalStyles />\n      </HashRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}