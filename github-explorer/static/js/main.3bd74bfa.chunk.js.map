{"version":3,"sources":["assets/logo.svg","assets/github-background.svg","components/Header/styles.ts","components/Header/index.tsx","styles/themes/dark.ts","styles/themes/light.ts","services/api.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","styles/global.ts","utils/usePersistedState.ts","App.tsx","index.tsx"],"names":["module","exports","Container","styled","div","Header","toggleTheme","useContext","ThemeContext","colors","title","to","src","logoImg","alt","onChange","checked","checkedIcon","uncheckedIcon","height","width","handleDiameter","offColor","shade","primary","onColor","secondary","background","icon","subtitle","description","cardTitle","cardBackground","api","axios","create","baseURL","Title","h1","props","theme","Form","form","hasError","css","Error","span","Repositories","Dashboard","useState","newRepo","setNewRepo","inputError","setInputError","storedRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","useEffect","setItem","stringify","handleAddRepository","useCallback","event","a","preventDefault","find","repository","full_name","toLowerCase","get","data","onSubmit","value","autoCorrect","autoCapitalize","e","target","placeholder","type","map","key","owner","avatar_url","login","size","header","RepositoryInfo","section","Issues","Repository","setRepository","issues","setIssues","params","useRouteMatch","then","response","stargazers_count","forks_count","open_issues_count","issue","id","href","html_url","rel","user","Routes","path","exact","component","createGlobalStyle","githubBackground","usePersistedState","initialState","storageValue","state","setState","App","usePeristedState","light","setTheme","dark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,+C,2VCEpC,IAAMC,EAAYC,IAAOC,IAAV,K,iBCmCPC,EAxBuB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAA+B,EAC5CC,qBAAWC,KAA7BC,EAD8D,EAC9DA,OAAQC,EADsD,EACtDA,MAEhB,OACE,kBAACR,EAAD,KACE,kBAAC,IAAD,CAAMS,GAAG,KACP,yBAAKC,IAAKC,IAASC,IAAI,qBAGzB,kBAAC,IAAD,CACEC,SAAUT,EACVU,QAAmB,SAAVN,EACTO,aAAa,EACbC,eAAe,EACfC,OAAQ,GACRC,MAAO,GACPC,eAAgB,GAChBC,SAAUC,YAAM,IAAMd,EAAOe,SAC7BC,QAAShB,EAAOiB,cC/BT,GACbhB,MAAO,OAEPD,OAAQ,CACNe,QAAS,OACTE,UAAW,UAEXC,WAAY,UAEZC,KAAM,UACNlB,MAAO,UACPmB,SAAU,UACVC,YAAa,UAEbC,UAAW,UACXC,eAAgB,YCfL,GACbtB,MAAO,QAEPD,OAAQ,CACNe,QAAS,UACTE,UAAW,UAEXC,WAAY,UAEZC,KAAM,UACNlB,MAAO,UACPmB,SAAU,UACVC,YAAa,UAEbC,UAAW,UACXC,eAAgB,Y,wDCTLC,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,2B,s1ECIJ,IAAMC,EAAQlC,IAAOmC,GAAV,KAKP,SAACC,GAAD,OAAWA,EAAMC,MAAM/B,OAAOC,SAG5B+B,EAAOtC,IAAOuC,KAAV,KAYO,SAACH,GAAD,OAAWA,EAAMC,MAAM/B,OAAOuB,kBAIhD,SAACO,GAAD,OACAA,EAAMI,UACNC,YADA,QAUS,SAACL,GAAD,OAAWA,EAAMC,MAAM/B,OAAOqB,cAuBzBP,YAAM,GAAK,YAKlBsB,EAAQ1C,IAAO2C,KAAV,KAMLC,EAAe5C,IAAOC,IAAV,KAQP,SAACmC,GAAD,OAAWA,EAAMC,MAAM/B,OAAOuB,kBAkC/B,SAACO,GAAD,OAAWA,EAAMC,MAAM/B,OAAOsB,aAI9B,SAACQ,GAAD,OAAWA,EAAMC,MAAM/B,OAAOqB,eAYhC,SAACS,GAAD,OAAWA,EAAMC,MAAM/B,OAAOmB,QCnB9BoB,EAlGa,WAAO,IAAD,EACFC,mBAAS,IADP,mBACzBC,EADyB,KAChBC,EADgB,OAEIF,mBAAS,IAFb,mBAEzBG,EAFyB,KAEbC,EAFa,OAGQJ,oBAAuB,WAC7D,IAAMK,EAAqBC,aAAaC,QACtC,gCAGF,OAAIF,EACKG,KAAKC,MAAMJ,GAGb,MAZuB,mBAGzBK,EAHyB,KAGXC,EAHW,KAehCC,qBAAU,WACRN,aAAaO,QACX,+BACAL,KAAKM,UAAUJ,MAEhB,CAACA,IAEJ,IAAMK,EAAsBC,sBAAW,uCACrC,WAAOC,GAAP,iBAAAC,EAAA,yDACED,EAAME,iBAEDlB,EAHP,uBAIIG,EAAc,yCAJlB,8BAUIM,EAAaU,MACX,SAACC,GAAD,OAAgBA,EAAWC,YAAcrB,EAAQsB,iBAXvD,uBAcIrB,EAAW,IACXE,EAAc,oDAflB,oDAoBuCpB,EAAIwC,IAAJ,gBACxBvB,IArBf,iBAoBkBoB,EApBlB,EAoBYI,KAIRd,EAAgB,GAAD,mBAAKD,GAAL,CAAmBW,KAClCnB,EAAW,IACXE,EAAc,IA1BlB,kDA4BIF,EAAW,IACXE,EAAc,oDA7BlB,0DADqC,sDAiCrC,CAACH,EAASS,IAGZ,OACE,oCACE,kBAACtB,EAAD,0CAEA,kBAACI,EAAD,CAAME,WAAYS,EAAYuB,SAAUX,GACtC,2BACEY,MAAO1B,EACP2B,YAAY,QACZC,eAAe,OACf/D,SAAU,SAACgE,GAAD,OAAO5B,EAAW4B,EAAEC,OAAOJ,QACrCK,YAAY,oCAEd,4BAAQC,KAAK,UAAb,cAGD9B,GAAc,kBAACP,EAAD,KAAQO,GAEvB,kBAACL,EAAD,KACGY,EAAawB,KAAI,SAACb,GAAD,OAChB,kBAAC,IAAD,CACEc,IAAKd,EAAWC,UAChB5D,GAAE,sBAAiB2D,EAAWC,YAE9B,yBACE3D,IAAK0D,EAAWe,MAAMC,WACtBxE,IAAKwD,EAAWe,MAAME,QAExB,6BACE,gCAASjB,EAAWe,MAAME,OAC1B,2BAAIjB,EAAWxC,cAGjB,kBAAC,IAAD,CAAgB0D,KAAM,Y,otGCzG3B,IAAMnF,EAASF,IAAOsF,OAAV,KASN,SAAClD,GAAD,OAAWA,EAAMC,MAAM/B,OAAOqB,eAM5B,SAACS,GAAD,OAAWA,EAAMC,MAAM/B,OAAOC,SAShCgF,EAAiBvF,IAAOwF,QAAV,KA2BV,SAACpD,GAAD,OAAWA,EAAMC,MAAM/B,OAAOsB,aAS9B,SAACQ,GAAD,OAAWA,EAAMC,MAAM/B,OAAOqB,eAkC9B,SAACS,GAAD,OAAWA,EAAMC,MAAM/B,OAAOsB,aAmB9B,SAACQ,GAAD,OAAWA,EAAMC,MAAM/B,OAAOoB,YAYlC+D,EAASzF,IAAOC,IAAV,KAOD,SAACmC,GAAD,OAAWA,EAAMC,MAAM/B,OAAOuB,kBA8B/B,SAACO,GAAD,OAAWA,EAAMC,MAAM/B,OAAOsB,aAS9B,SAACQ,GAAD,OAAWA,EAAMC,MAAM/B,OAAOqB,eAahC,SAACS,GAAD,OAAWA,EAAMC,MAAM/B,OAAOmB,QC7D9BiE,EAvFc,WAAO,IAAD,EACG5C,mBAA4B,MAD/B,mBAC1BqB,EAD0B,KACdwB,EADc,OAEL7C,mBAAkB,IAFb,mBAE1B8C,EAF0B,KAElBC,EAFkB,KAIzBC,EAAWC,cAAXD,OAYR,OAVApC,qBAAU,WACR5B,EAAIwC,IAAJ,gBAAiBwB,EAAO3B,aAAc6B,MAAK,SAACC,GAC1CN,EAAcM,EAAS1B,SAGzBzC,EAAIwC,IAAJ,gBAAiBwB,EAAO3B,WAAxB,YAA6C6B,MAAK,SAACC,GACjDJ,EAAUI,EAAS1B,WAEpB,CAACuB,EAAO3B,aAGT,oCACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAM3D,GAAG,KACP,kBAAC,IAAD,CAAe6E,KAAM,KADvB,WAMDlB,GACC,kBAACoB,EAAD,KACE,gCACE,yBACE9E,IAAK0D,EAAWe,MAAMC,WACtBxE,IAAKwD,EAAWe,MAAME,QAExB,6BACE,gCAASjB,EAAWC,WACpB,2BAAID,EAAWxC,eAInB,4BACE,4BACE,gCACE,kBAAC,IAAD,CAAQ0D,KAAM,KACblB,EAAW+B,kBAEd,wCAGF,4BACE,gCACE,kBAAC,IAAD,CAAab,KAAM,KAClBlB,EAAWgC,aAEd,wCAGF,4BACE,gCACE,kBAAC,IAAD,CAAed,KAAM,KACpBlB,EAAWiC,mBAEd,mDAMR,kBAACX,EAAD,KACGG,EAAOZ,KAAI,SAACqB,GAAD,OACV,uBACEpB,IAAKoB,EAAMC,GACXC,KAAMF,EAAMG,SACZ3B,OAAO,SACP4B,IAAI,uBAEJ,6BACE,gCAASJ,EAAM9F,OACf,2BAAI8F,EAAMK,KAAKtB,QAGjB,kBAAC,IAAD,CAAgBC,KAAM,YCxGnBsB,EAPU,kBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWjE,IACjC,kBAAC,IAAD,CAAO+D,KAAK,2BAA2BE,UAAWpB,M,+fCLvCqB,kBAAf,KASkB,SAAC3E,GAAD,OACZA,EAAMC,MAAM/B,OACTkB,aAAmBwF,KCMbC,MAjBf,SAA8BhC,EAAaiC,GAA+B,IAAD,EAC7CpE,oBAAS,WACjC,IAAMqE,EAAe/D,aAAaC,QAAQ4B,GAE1C,OAAIkC,EACK7D,KAAKC,MAAM4D,GAEbD,KAP8D,mBAChEE,EADgE,KACzDC,EADyD,KAcvE,OAJA3D,qBAAU,WACRN,aAAaO,QAAQsB,EAAK3B,KAAKM,UAAUwD,MACxC,CAACnC,EAAKmC,IAEF,CAACA,EAAOC,ICaFC,EAlBO,WAAO,IAAD,EACAC,EAA+B,QAASC,GADxC,mBACnBnF,EADmB,KACZoF,EADY,KAO1B,OACE,kBAAC,IAAD,CAAepF,MAAOA,GACpB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQlC,YAPM,WAClBsH,EAAyB,UAAhBpF,EAAM9B,MAAoBmH,EAAOF,MAOtC,kBAAC,EAAD,MACA,kBAAC,EAAD,SCrBRG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3bd74bfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-background.0b819d63.svg\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 60px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import React, { useContext } from 'react';\nimport Switch from 'react-switch';\nimport { Link } from 'react-router-dom';\nimport { ThemeContext } from 'styled-components';\nimport { shade } from 'polished';\n\nimport { Container } from './styles';\nimport logoImg from '../../assets/logo.svg';\n\ninterface HeaderProps {\n  toggleTheme(): void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ toggleTheme }: HeaderProps) => {\n  const { colors, title } = useContext(ThemeContext);\n\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logoImg} alt=\"Github Explorer\" />\n      </Link>\n\n      <Switch\n        onChange={toggleTheme}\n        checked={title === 'dark'}\n        checkedIcon={false}\n        uncheckedIcon={false}\n        height={20}\n        width={40}\n        handleDiameter={20}\n        offColor={shade(0.15, colors.primary)}\n        onColor={colors.secondary}\n      />\n    </Container>\n  );\n};\n\nexport default Header;\n","export default {\n  title: 'dark',\n\n  colors: {\n    primary: '#333',\n    secondary: '#718AF4',\n\n    background: '#5C5D6D',\n\n    icon: '#cbcbd6',\n    title: '#faf7ff',\n    subtitle: '#f0f0f2',\n    description: '#a8a8b3',\n\n    cardTitle: '#f0f0f5',\n    cardBackground: '#525362',\n  },\n};\n","export default {\n  title: 'light',\n\n  colors: {\n    primary: '#718AF4',\n    secondary: '#718AF4',\n\n    background: '#f0f0f5',\n\n    icon: '#cbcbd6',\n    title: '#3a3a3a',\n    subtitle: '#6c6c80',\n    description: '#a8a8b3',\n\n    cardTitle: '#3d3d4d',\n    cardBackground: '#ffffff',\n  },\n};\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  max-width: 450px;\n  margin-top: 80px;\n  line-height: 56px;\n  color: ${(props) => props.theme.colors.title};\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n\n  display: flex;\n\n  input {\n    flex: 1;\n    border: 0;\n    height: 70px;\n    color: #3a3a3a;\n    padding: 0 24px;\n    border: 2px solid ${(props) => props.theme.colors.cardBackground};\n    border-right: 0;\n    border-radius: 5px 0px 0px 5px;\n\n    ${(props) =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n      `}\n\n    @media (max-width: 480px) {\n      font-size: 90%;\n    }\n\n    &::placeholder {\n      color: ${(props) => props.theme.colors.description};\n      @media (max-width: 480px) {\n        font-size: 80%;\n      }\n    }\n  }\n\n  button {\n    border: 0;\n    color: #fff;\n    width: 210px;\n    height: 70px;\n    font-weight: bold;\n    background-color: #04d361;\n    border-radius: 0px 5px 5px 0px;\n    transition: background-color 0.2s;\n\n    @media (max-width: 480px) {\n      padding: 5px;\n      font-size: 90%;\n    }\n\n    &:hover {\n      background: ${shade(0.2, '#04d361')};\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    width: 100%;\n    padding: 24px;\n    display: block;\n    background: ${(props) => props.theme.colors.cardBackground};\n    border-radius: 5px;\n    text-decoration: none;\n    transition: transform 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n\n      @media (max-width: 480px) {\n        width: 48px;\n        height: 48px;\n        align-self: flex-start;\n      }\n    }\n\n    div {\n      flex: 1;\n      margin: 0 16px;\n\n      strong {\n        font-size: 20px;\n        color: ${(props) => props.theme.colors.cardTitle};\n      }\n\n      p {\n        color: ${(props) => props.theme.colors.description};\n        margin-top: 4px;\n        font-size: 18px;\n\n        @media (max-width: 480px) {\n          font-size: 82%;\n        }\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: ${(props) => props.theme.colors.icon};\n\n      @media (max-width: 480px) {\n        width: 20px;\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect, FormEvent, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storedRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n\n    if (storedRepositories) {\n      return JSON.parse(storedRepositories);\n    }\n\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  const handleAddRepository = useCallback(\n    async (event: FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n\n      if (!newRepo) {\n        setInputError('Digite o autor/nome do repositório');\n        return;\n      }\n\n      // check if repository already exists\n      if (\n        repositories.find(\n          (repository) => repository.full_name === newRepo.toLowerCase(),\n        )\n      ) {\n        setNewRepo('');\n        setInputError('Ops, você já adicionou este repositório');\n        return;\n      }\n\n      try {\n        const { data: repository } = await api.get<Repository>(\n          `repos/${newRepo}`,\n        );\n\n        setRepositories([...repositories, repository]);\n        setNewRepo('');\n        setInputError('');\n      } catch (error) {\n        setNewRepo('');\n        setInputError('Desculpe, não encontramos este repositório');\n      }\n    },\n    [newRepo, repositories],\n  );\n\n  return (\n    <>\n      <Title>Explore repositórios no GitHub</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          autoCorrect=\"false\"\n          autoCapitalize=\"none\"\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder=\"digite o nome do repositório\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <Link\n            key={repository.full_name}\n            to={`/repository/${repository.full_name}`}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.owner.login}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={40} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  margin-top: 16px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    color: ${(props) => props.theme.colors.description};\n    align-items: center;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${(props) => props.theme.colors.title};\n    }\n\n    svg {\n      margin-right: 4px;\n    }\n  }\n`;\n\nexport const RepositoryInfo = styled.section`\n  header {\n    display: flex;\n    align-items: center;\n\n    margin-top: 80px;\n\n    @media (max-width: 480px) {\n      margin-top: 52px;\n      align-items: flex-start;\n    }\n\n    img {\n      width: 120px;\n      height: 120px;\n      border-radius: 50%;\n\n      @media (max-width: 480px) {\n        width: 20%;\n        height: 50%;\n      }\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        color: ${(props) => props.theme.colors.cardTitle};\n        font-size: 36px;\n\n        @media (max-width: 480px) {\n          font-size: 140%;\n        }\n      }\n\n      p {\n        color: ${(props) => props.theme.colors.description};\n        font-size: 18px;\n        margin-top: 4px;\n\n        @media (max-width: 480px) {\n          font-size: 100%;\n        }\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    margin-top: 40px;\n    list-style: none;\n\n    li {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n\n      @media (max-width: 480px) {\n        margin: 0 auto;\n      }\n\n      & + li {\n        margin-left: 80px;\n\n        @media (max-width: 480px) {\n          margin-left: 40px;\n        }\n      }\n\n      strong {\n        color: ${(props) => props.theme.colors.cardTitle};\n        display: block;\n        font-size: 36px;\n\n        > svg {\n          margin-right: 8px;\n        }\n\n        @media (max-width: 480px) {\n          font-size: 90%;\n\n          display: flex;\n          align-items: flex-start;\n          justify-content: center;\n          flex-direction: column;\n        }\n      }\n\n      span {\n        color: ${(props) => props.theme.colors.subtitle};\n        display: block;\n        margin-top: 4px;\n\n        @media (max-width: 480px) {\n          font-size: 80%;\n        }\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n\n  a {\n    width: 100%;\n    padding: 24px;\n    display: block;\n    background: ${(props) => props.theme.colors.cardBackground};\n    border-radius: 5px;\n    text-decoration: none;\n    transition: transform 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      min-width: 64px;\n      min-height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      flex: 1;\n      margin: 0 16px;\n\n      strong {\n        font-size: 20px;\n        color: ${(props) => props.theme.colors.cardTitle};\n\n        @media (max-width: 480px) {\n          font-size: 100%;\n          text-align: justify;\n        }\n      }\n\n      p {\n        color: ${(props) => props.theme.colors.description};\n        margin-top: 4px;\n        font-size: 18px;\n\n        @media (max-width: 480px) {\n          font-size: 100%;\n          text-align: justify;\n        }\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: ${(props) => props.theme.colors.icon};\n\n      @media (max-width: 480px) {\n        width: 20px;\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport {\n  FiStar,\n  FiGitBranch,\n  FiAlertCircle,\n  FiChevronLeft,\n  FiChevronRight,\n} from 'react-icons/fi';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport api from '../../services/api';\n\nimport { Header, RepositoryInfo, Issues } from './styles';\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  forks_count: number;\n  stargazers_count: number;\n  open_issues_count: number;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const [repository, setRepository] = useState<Repository | null>(null);\n  const [issues, setIssues] = useState<Issue[]>([]);\n\n  const { params } = useRouteMatch<RepositoryParams>();\n\n  useEffect(() => {\n    api.get(`repos/${params.repository}`).then((response) => {\n      setRepository(response.data);\n    });\n\n    api.get(`repos/${params.repository}/issues`).then((response) => {\n      setIssues(response.data);\n    });\n  }, [params.repository]);\n\n  return (\n    <>\n      <Header>\n        <Link to=\"/\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n\n      {repository && (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n\n          <ul>\n            <li>\n              <strong>\n                <FiStar size={28} />\n                {repository.stargazers_count}\n              </strong>\n              <span>Stars</span>\n            </li>\n\n            <li>\n              <strong>\n                <FiGitBranch size={28} />\n                {repository.forks_count}\n              </strong>\n              <span>Forks</span>\n            </li>\n\n            <li>\n              <strong>\n                <FiAlertCircle size={28} />\n                {repository.open_issues_count}\n              </strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <Issues>\n        {issues.map((issue) => (\n          <a\n            key={issue.id}\n            href={issue.html_url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n\n            <FiChevronRight size={40} />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Repository from '../pages/Repository';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard} />\n    <Route path=\"/repository/:repository+\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nimport githubBackground from '../assets/github-background.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: ${(props) =>\n      props.theme.colors\n        .background}  url(${githubBackground}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font-size: 16px;\n    font-family: Roboto, sans-serif;\n  }\n\n  #root {\n    margin: 0 auto;\n    max-width: 960px;\n    padding: 40px 20px;\n  }\n\n  button, a {\n    cursor: pointer;\n  }\n`;\n","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\n\ntype Response<T> = [T, Dispatch<SetStateAction<T>>];\n\nfunction usePersistedState<T>(key: string, initialState: T): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key);\n\n    if (storageValue) {\n      return JSON.parse(storageValue);\n    }\n    return initialState;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport default usePersistedState;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider, DefaultTheme } from 'styled-components';\n\nimport Header from './components/Header';\n\nimport dark from './styles/themes/dark';\nimport light from './styles/themes/light';\n\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\nimport usePeristedState from './utils/usePersistedState';\n\nconst App: React.FC = () => {\n  const [theme, setTheme] = usePeristedState<DefaultTheme>('theme', light);\n\n  const toggleTheme = (): void => {\n    setTheme(theme.title === 'light' ? dark : light);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter>\n        <Header toggleTheme={toggleTheme} />\n        <Routes />\n        <GlobalStyles />\n      </HashRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}